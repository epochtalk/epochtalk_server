name: Build-ECR

on:
  push:
    branches:
      - master
      - github-actions

jobs:
  build_job:
    name: Build
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6.1
      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          ref: ${{ github.event.client_payload.branch }}
  docker_build_job:
    needs: build_job
    name: Docker Build
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push Docker images
        uses: docker/build-push-action@v3.2.0
        with:
          push: false
          load: true
          tags: epochtalk/epochtalk_server:latest
  test_job:
    services:
      postgres:
        image: postgres:14.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: epochtalk_server
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7.0.4
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    needs: docker_build_job
    name: Run tests
    runs-on: [self-hosted, Linux, X64]
    steps:
    - name: Run tests in docker container
      run: docker run --rm -e DATABASE_URL=$DATABASE_URL -e REDIS_HOST=$REDIS_HOST epochtalk/epochtalk_server mix test
      env:
        DATABASE_URL: postgresql://postgres:postgres@postgres/epochtalk_server
        REDIS_HOST: redis
  pre_release_job:
    needs: docker_build_job
    name: Pre-Release
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3.0.0
        with:
          dry_run: true
          semantic_version: 19.0.5
          branches: |
            [
              'github-actions'
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release_job:
    needs: docker_build_job
    name: Release
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3.0.0
        with:
          semantic_version: 19.0.5
          branches: |
            [
              'master'
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
